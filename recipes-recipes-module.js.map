{"version":3,"sources":["./src/app/Auth/auth.guard.ts","./src/app/recipes/recipes-resolver.service.ts","./src/app/recipes/recipes.module.ts","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipes-routing.module.ts","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, \r\n    CanActivate, Router, RouterStateSnapshot , UrlTree} from \"@angular/router\";\r\nimport { promise } from \"protractor\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take, tap } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport { Store } from \"@ngrx/store\";\r\n@Injectable({providedIn: \"root\"})\r\n\r\nexport class AuthGuard implements CanActivate{\r\nconstructor(private authService : AuthService,\r\n    private router : Router,\r\n    private store : Store<fromApp.AppState>){}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, \r\n        router: RouterStateSnapshot)\r\n    : boolean |\r\n    Promise<boolean | UrlTree> |\r\n    Observable<boolean | UrlTree> |\r\n    UrlTree{\r\n      \r\n return this.store.select('auth').pipe(\r\n     take(1), \r\n     map(authState =>  {\r\n        return authState.user;\r\n     }),\r\n     map(user =>{\r\n     const isAuth = !!user;\r\n     if(isAuth){\r\n         return true;\r\n     }else{\r\n         return this.router.createUrlTree(['/auth']);\r\n     }\r\n }));\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { DataStorageService } from \"../shared/data-storage.service\";\r\nimport { Recipe } from \"./recipe.model\";\r\nimport { RecipeService } from \"./recipe.service\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as RecipesActions from '../recipes/store/recipe.actions';\r\nimport { Actions, ofType } from \"@ngrx/effects\";\r\nimport { map, switchMap, take } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\n@Injectable({\"providedIn\": 'root'})\r\nexport class RecipesResolverService implements Resolve<Recipe[]>{\r\nconstructor(private dataStorageService : DataStorageService,\r\n    private recipesService: RecipeService,\r\n     private store: Store<fromApp.AppState>,\r\n     private actions$: Actions){}\r\n\r\nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n//const recipes = this.recipesService.getRecipes();\r\nreturn this.store.select('recipes').pipe(\r\n    take(1),\r\n    map(recipesState =>{\r\n    return recipesState.recipes;\r\n}), switchMap(recipes =>{\r\n    if(recipes.length == 0){\r\nthis.store.dispatch(new RecipesActions.FetchRecipes());\r\nreturn this.actions$.pipe(\r\n    ofType(RecipesActions.SET_RECIPES), take(1)\r\n)\r\n    }else{\r\nreturn of(recipes);\r\n    }\r\n}));\r\n\r\n    // this.store.dispatch(new RecipesActions.FetchRecipes());\r\n    // return this.actions$.pipe(ofType(RecipesActions.SET_RECIPES), take(1));\r\n    //return this.dataStorageService.fetchRecipes();\r\n\r\n}\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeItemComponent } from \"./recipe-list/recipe-item/recipe-item.component\";\r\nimport { RecipeListComponent } from \"./recipe-list/recipe-list.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipesRoutingModule } from \"./recipes-routing.module\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n        RecipesComponent,\r\n        RecipeListComponent,\r\n        RecipeDetailComponent,\r\n        RecipeItemComponent,\r\n        RecipeStartComponent,\r\n        RecipeEditComponent,\r\n    ],\r\n  imports:[\r\n    SharedModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    RecipesRoutingModule,\r\n    \r\n  ]\r\n})\r\n\r\nexport class RecipeModule{\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recipe-start',\r\n  templateUrl: './recipe-start.component.html',\r\n  styleUrls: ['./recipe-start.component.css']\r\n})\r\nexport class RecipeStartComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h3>Please select a Recipe!</h3>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Recipe } from '../../recipe.model';\r\n\r\n@Component({\r\n  selector: 'app-recipe-item',\r\n  templateUrl: './recipe-item.component.html',\r\n  styleUrls: ['./recipe-item.component.css']\r\n})\r\nexport class RecipeItemComponent implements OnInit {\r\n\r\n @Input() recipe: Recipe;\r\n  @Input() index: number;\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<a \r\nstyle=\"cursor: pointer;\"\r\n[routerLink]=\"[index]\"\r\nrouterLinkActive =\"active\"\r\nclass=\"list-group-item clearfix\">\r\n    <div class=\"pull-left\">\r\n        <h4 class=\"list-group-item-heading\">\r\n            {{recipe.name}}\r\n        </h4>\r\n        <p class=\"list-group-item-text\">{{recipe.description}}</p>\r\n    </div>\r\n    <span class=\"pull-right\">\r\n        <img [src]=\"recipe.imagePath\" \r\n        alt=\"{{recipe.name}}\" \r\n        class=\"img-responsive\" \r\n        style=\"max-height: 50px;\">\r\n    </span>\r\n</a>","import { NgModule } from \"@angular/core\";\r\nimport { Router, RouterModule, Routes } from \"@angular/router\";\r\nimport { AuthGuard } from \"../Auth/auth.guard\";\r\nimport { RecipeDetailComponent } from \"./recipe-detail/recipe-detail.component\";\r\nimport { RecipeEditComponent } from \"./recipe-edit/recipe-edit.component\";\r\nimport { RecipeStartComponent } from \"./recipe-start/recipe-start.component\";\r\nimport { RecipesResolverService } from \"./recipes-resolver.service\";\r\nimport { RecipesComponent } from \"./recipes.component\";\r\n\r\nconst routes : Routes =[\r\n    {path: '', component: RecipesComponent, \r\ncanActivate: [AuthGuard],\r\nchildren:[\r\n    {path:\"\",component: RecipeStartComponent},\r\n    {path: \"new\", component: RecipeEditComponent},\r\n    {path:\":id\", component: RecipeDetailComponent, resolve:[RecipesResolverService]},\r\n    {path: \":id/edit\", component: \r\n    RecipeEditComponent, resolve:[RecipesResolverService]}\r\n]},\r\n];\r\n\r\n@NgModule({\r\nimports:[RouterModule.forChild(routes)],\r\nexports:[RouterModule]\r\n})\r\n\r\nexport class RecipesRoutingModule{}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-recipes',\r\n  templateUrl: './recipes.component.html',\r\n  styleUrls: ['./recipes.component.css']\r\n})\r\nexport class RecipesComponent implements \r\nOnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-5\">\r\n   <app-recipe-list></app-recipe-list>\r\n    </div>\r\n    <div class=\"col-md-7\">\r\n   <router-outlet></router-outlet>\r\n</div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport { map } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-recipe-list',\r\n  templateUrl: './recipe-list.component.html',\r\n  styleUrls: ['./recipe-list.component.css']\r\n})\r\nexport class RecipeListComponent implements \r\nOnInit, OnDestroy {\r\n  subscriptions : Subscription;\r\nrecipes: Recipe[];\r\n  constructor(private recipeService: RecipeService,\r\n    private router : Router,\r\n    private route: ActivatedRoute,\r\n    private store : Store<fromApp.AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n   // this.subscriptions =this.recipeService.recipeChanged\r\n  //  .subscribe(\r\n  //   (recipes: Recipe[]) =>{\r\n  //     this.recipes = recipes\r\n  //   }\r\n  // );\r\n  console.log(\"dfdffdfdf\" + this.store.select('recipes'));\r\n   this.subscriptions = this.store.select('recipes') \r\n   .pipe(map(recipeState => recipeState.recipes))   \r\n   .subscribe(\r\n      (recipes: Recipe[]) =>{\r\n        this.recipes = recipes\r\n      }\r\n    );\r\n\r\n    //this.recipes = this.recipeService.getRecipes();\r\n  }\r\n  \r\n  ngOnDestroy(){\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n  onNewRecipe(){\r\n     this.router.navigate(['new'], {relativeTo: this.route});\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <button (click)=\"onNewRecipe()\" class=\"btn btn-success\">New Recipe</button>\r\n    </div>\r\n</div>\r\n<hr>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <app-recipe-item \r\n        *ngFor=\"let recipeEl of recipes;let i = index\" \r\n        [recipe]=\"recipeEl\"\r\n        [index]=\"i\"\r\n        ></app-recipe-item>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Recipe } from '../recipe.model';\r\nimport { RecipeService } from '../recipe.service';\r\nimport * as fromApp from '../../store/app.reducer';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport * as RecipeActions from '../store/recipe.actions';\r\nimport * as ShoppingListActions from '../../shopping-list/store/shopping-list.action';\r\n@Component({\r\n  selector: 'app-recipe-detail',\r\n  templateUrl: './recipe-detail.component.html',\r\n  styleUrls: ['./recipe-detail.component.css']\r\n})\r\nexport class RecipeDetailComponent implements OnInit {\r\n recipe: Recipe;\r\n id: number;\r\n  constructor(private route: ActivatedRoute,\r\n     private recipeService : RecipeService,\r\n     private router: Router,\r\n     private store: Store<fromApp.AppState>) {\r\n     \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  //   this.route.params\r\n  //   .subscribe((param:Params) => {\r\n  //     this.id = +param['id'];\r\n  //    // this.recipe = this.recipeService.getRecipe(this.id);\r\n  //  this.store.select('recipes').pipe(map(recipeState => \r\n  //   {return recipeState.recipes.find((recipe, index) =>{\r\n  //    return index === this.id;\r\n  //   })\r\n  //    })\r\n  //   ).subscribe(recipe => { \r\n  //  this.recipe = recipe;\r\n  //   });\r\n  //   })\r\n\r\n  this.route.params.pipe(map(params => {\r\n    return +params['id']\r\n  }), switchMap(id => {\r\n    this.id = id;\r\n    return this.store.select('recipes');\r\n  }),\r\n  map(recipeState =>{\r\n    return recipeState.recipes.find((recipe, index) =>{\r\n      return index === this.id\r\n    })\r\n  })).subscribe(recipe=>{\r\n    this.recipe = recipe;\r\n  })\r\n  }\r\n  \r\n  onAddToShoppingList(){\r\n    this.store.dispatch(new ShoppingListActions.AddIngredients(this.recipe.ingredients));\r\n    //his.recipeService.addIngredientToShoppingList(this.recipe.ingredients);\r\n  }\r\n  onEditRecipe(){\r\n     this.router.navigate(['edit'],{relativeTo: this.route})\r\n  }\r\n  onDeleteRecipe(){\r\n    this.store.dispatch(new RecipeActions.DeleteRecipe(this.id));\r\n    //this.recipeService.deleteRecipe(this.id);\r\n    this.router.navigate([\"/recipes\"])\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <img \r\n        [src]=\"recipe.imagePath\" \r\n        alt=\"{{recipe.name}}\" \r\n        class=\"img-responsive\"\r\n        style=\"max-height: 300px;\">\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n     <h1>{{recipe.name}}</h1>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n      <div class=\"btn-group\"\r\n      appDropdown>\r\n          <button type=\"button\" class=\"bn btin-primary dropdown-toggle\">\r\n              Manage Recipe <span class=\"caret\"></span></button>\r\n              <ul class=\"dropdown-menu\">\r\n                  <li>\r\n                     <a (click)=\"onAddToShoppingList()\" style=\"cursor:pointer;\">To Shopping List</a>\r\n                  </li>\r\n                  <li>\r\n                    <a style=\"cursor: pointer;\" (click)=\"onEditRecipe()\">Edit Recipe</a>\r\n                 </li>\r\n                 <li>\r\n                    <a style=\"cursor: pointer;\" (click)=\"onDeleteRecipe()\">Delete Recipe</a>\r\n                 </li>\r\n              </ul>\r\n      </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        {{recipe.description}}\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n       <ul class=\"list-group\">\r\n           <li class=\"list-group-item\"\r\n           *ngFor=\"let ingredient of recipe.ingredients\">\r\n          {{ingredient.name}} - {{ingredient.amount}}\r\n           </li>\r\n       </ul>\r\n    </div>\r\n</div>\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { RecipeService } from '../recipe.service';\r\nimport * as fromApp from '../../store/app.reducer'\r\nimport { map } from 'rxjs/operators';\r\nimport { Recipe } from '../recipe.model';\r\nimport * as RecipeActions from '../store/recipe.actions';\r\nimport { Subscription } from 'rxjs';\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit , OnDestroy{\r\nid: number;\r\neditMode = false;\r\nrecipeForm: FormGroup;\r\nprivate storeSub : Subscription;\r\n\r\n  constructor(private route : ActivatedRoute,\r\n    private recipeService: RecipeService,\r\n    private router :Router,\r\n    private store : Store<fromApp.AppState>) {\r\n\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params\r\n    .subscribe((params: Params) => \r\n    {\r\n     this.id = + params[\"id\"];\r\n     this.editMode = params['id'] != null;\r\n     this.initForm();\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.storeSub){\r\n    this.storeSub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  onSubmit(){\r\n   if(this.editMode){\r\n     this.store.dispatch(\r\n       new RecipeActions.UpdateRecipe(\r\n         {index: this.id, \r\n          newRecipe: this.recipeForm.value}))\r\n     //this.recipeService.updateRecipe(this.id, this.recipeForm.value);\r\n   }else{\r\n    this.store.dispatch(\r\n      new RecipeActions.AddRecipe(this.recipeForm.value))\r\n    //this.recipeService.addRecipe(this.recipeForm.value);\r\n   }\r\n   this.onCancel();\r\n  }\r\n\r\n  onAddIngredient(){\r\n    (<FormArray>this.recipeForm.get('ingredients')).push(\r\n      new FormGroup({\r\n        'name': new FormControl(null,\r\n          Validators.required),\r\n        'amount': new FormControl(null,\r\n          [Validators.required,\r\n            Validators.pattern(/^[1-9]+[0-9]*$/)])\r\n      })\r\n    );\r\n  }\r\n\r\n  onDeleteIngredient(index : number){\r\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\r\n  }\r\n\r\n  onCancel(){\r\n     this.router.navigate(['../',{relativeTo: this.route}])\r\n  }\r\n\r\n  private initForm(){\r\n    let recipeName = '';\r\n    let imagePath = '';\r\n    let recipeDescription = '';\r\n    let recipeIngredients= new FormArray([]);\r\n    if(this.editMode){\r\n\r\n  //const recipe = this.recipeService.getRecipe(this.id);\r\n this.storeSub = this.store.select('recipes').pipe(map(recipeState =>{\r\n    return recipeState.recipes.find((recipe, index) =>{\r\n       return index === this.id;\r\n    })\r\n     })).subscribe(recipe => {\r\n      recipeName = recipe.name;\r\n      imagePath = recipe.imagePath;\r\n      recipeDescription = recipe.description;\r\n      if(recipe['ingredients']){\r\n      for(let ingredient of recipe.ingredients){\r\n        recipeIngredients.push(\r\n        new FormGroup({\r\n          'name':new FormControl(ingredient.name, Validators.required),\r\n          'amount': new FormControl(ingredient.amount,\r\n            [Validators.required,\r\n            Validators.pattern(/^[1-9]+[0-9]*$/)])\r\n        })\r\n        );\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nthis.recipeForm = new FormGroup({\r\n  'name': new FormControl(recipeName, Validators.required),\r\n  'imagePath': new FormControl(imagePath, Validators.required),\r\n  'description': new FormControl(recipeDescription, Validators.required),\r\n  'ingredients': recipeIngredients\r\n});\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-12\">\r\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"col-xs-12\">\r\n                <button type=\"submit\"\r\n                 class=\"btn btn-success\"\r\n                [disabled]=\"!recipeForm.valid\" >Save</button>\r\n                <button type=\"button\" \r\n                class=\"btn btn-danger\"\r\n                (click)=\"onCancel()\">Cancel</button>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\"\r\n                    id=\"name\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"imagePath\">Image URL</label>\r\n                    <input type=\"text\"\r\n                    id=\"imagePath\"\r\n                    formControlName=\"imagePath\"\r\n                    class=\"form-control\"\r\n                    #imagePath>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                   <img [src]=\"imagePath.value\" class=\"img-responsive\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"description\">Description</label>\r\n                    <textarea \r\n                    type=\"text\"\r\n                    id=\"description\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"description\"\r\n                    rows=\"6\">\r\n                    </textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\" formArrayName =\"ingredients\">\r\n                    <div class=\"row\" \r\n                    *ngFor=\"let ingredientCtrl of recipeForm.get('ingredients')['controls']; let i = index\"\r\n                    [formGroupName]=\"i\"\r\n                    style=\"margin-top:10px\">\r\n                        <div class=\"col-xs-8\">\r\n                            <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            formControlName =\"name\">\r\n                        </div>\r\n                        <div class=\"col-xs-2\">\r\n                            <input type=\"number\"\r\n                            class=\"form-control\"\r\n                            formControlName =\"amount\">\r\n                        </div>\r\n                        <div class=\"col-xs-2\">\r\n                           <button class=\"btn btn-danger\" type=\"button\"\r\n                           (click)=\"onDeleteIngredient(i)\">X</button>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-12\">\r\n                         <button (click)=\"onAddIngredient()\" type=\"button\" class=\"btn btn-success\">Add Ingredients</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}