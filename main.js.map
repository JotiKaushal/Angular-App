{"version":3,"sources":["./src/app/auth/store/auth.actions.ts","./src/app/shared/placeholder/placeholder.directive.ts","./src/app/shared/dropdown-directive.ts","./src/app/shared/ingredient.model.ts","./src/environments/environment.ts","./src/app/shared/data-storage.service.ts","./src/app/shared/shared.module.ts","./src/app/store/app.reducer.ts","./src/app/Auth/store/auth.effects.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/recipes/store/recipe.effects.ts","./src/app/Auth/store/auth.actions.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/app.module.ts","./src/app/shopping-list/store/shopping-list.reducer.ts","./src/app/app-routing.modules.ts","./src/app/recipes/recipe.service.ts","./src/app/auth/user.model.ts","./src/app/recipes/store/recipe.reducer.ts","./src/app/Auth/user.model.ts","./src/app/shopping-list/store/shopping-list.action.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/recipes/store/recipe.actions.ts","./src/app/core.module.ts","./src/app/Auth/auth.service.ts","./src/app/shopping-list/shopping-list.service.ts","./src/app/auth/store/auth.reducer.ts","./src/app/Auth/auth-interceptor.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/shared/loading-spinner/loading-spinner.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Actions } from \"@ngrx/effects\";\r\nimport { Action } from \"@ngrx/store\";\r\n\r\nexport const AUTHENTICATE_SUCCESS = '[Auth] Authenticate Success';\r\nexport const LOGOUT = '[Auth] Logout';\r\nexport const LOGIN_START = '[Auth] Login Start';\r\nexport const AUTHENTICATE_FAIL ='[Auth] Authenticate Fail';\r\nexport const SIGNUP_START = '[Auth] Signup Start';\r\nexport const SIGNUP = '[Auth] Signup';\r\nexport const CLEAR_ERROR = '[Auth] Clear error';\r\nexport const AUTO_LOGIN = '[Auth] Auto Login';\r\nexport class AuthenticateSuccess implements Action{\r\n    readonly type = AUTHENTICATE_SUCCESS;\r\n\r\n    constructor(\r\n        public payload: {\r\n            email: string; \r\n            userId: string; \r\n            token: string; \r\n            expirationDate: Date,\r\n            redirect: boolean}){}\r\n}\r\n\r\nexport class logout implements Action{\r\n    readonly type = LOGOUT;\r\n}\r\n\r\nexport class LoginStart implements Action{\r\n    readonly type = LOGIN_START;\r\n    constructor(public payload: {email: string, password: string}){};\r\n}\r\n\r\nexport class AuthenticateFail implements Action{\r\n    readonly type = AUTHENTICATE_FAIL;\r\n    constructor(public payload : string){}\r\n}\r\n\r\nexport class SignupStart implements Action{\r\n    readonly type = SIGNUP_START;\r\n    constructor(public payload: {email: string, password: string}){};\r\n}\r\n\r\nexport class ClearError implements Action{\r\n    readonly type = CLEAR_ERROR;\r\n}\r\n\r\nexport class Autologin implements Action{\r\n    readonly type = AUTO_LOGIN;\r\n}\r\nexport type AuthActions = AuthenticateSuccess | logout | LoginStart | AuthenticateFail | SignupStart | ClearError | Autologin;","import { Directive, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[appPlaceholder]'\r\n})\r\n\r\nexport class PlaceholderDirective{\r\nconstructor(public viewcontainerRef: ViewContainerRef){}\r\n}","import { Directive, HostBinding, HostListener } from \"@angular/core\";\r\n\r\n@Directive({\r\n        selector: '[appDropdown]'\r\n    })\r\n\r\nexport class DropdownDirective {\r\n@HostBinding('class.open') isOpen = false;\r\n@HostListener('click') toggleOpen(){\r\nthis.isOpen = !this.isOpen;\r\n}\r\n}","export class Ingredient{\r\n    constructor( public name: string, public amount: number){\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseAPIKey: 'AIzaSyCPr0kqMOWskpWn6lU1VoB8Hs5spAaBf-A'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Recipe } from \"../recipes/recipe.model\";\r\nimport { RecipeService } from \"../recipes/recipe.service\";\r\nimport {exhaustMap, map, take, tap} from 'rxjs/operators';\r\nimport { AuthService } from \"../Auth/auth.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as RecipesActions from '../recipes/store/recipe.actions';\r\n\r\n@Injectable()\r\nexport class DataStorageService{\r\nconstructor(private http: HttpClient, private recipesService: RecipeService,\r\n    private authService: AuthService, private store : Store<fromApp.AppState>){}\r\n\r\nstoreRecipe(){\r\nconst recipe = this.recipesService.getRecipes();\r\n this.http.put(\"https://ng-course-recipe-book-689f7-default-rtdb.firebaseio.com/recipes.json\"\r\n,recipe).subscribe(\r\nresponse => {\r\n    console.log(response)\r\n}\r\n);\r\n}\r\n\r\nfetchRecipes(){\r\n   return this.http.get<Recipe[]>(\r\n       \"https://ng-course-recipe-book-689f7-default-rtdb.firebaseio.com/recipes.json\")\r\n    .pipe(map(recipes => {\r\n       return recipes.map(recipe =>\r\n        {return {...recipe, ingredients \r\n        : recipe.ingredients ? recipe.ingredients : []}\r\n        })\r\n    }),\r\n    tap(\r\n        recipes => {\r\n            this.store.dispatch(new RecipesActions.SetRecipes(recipes));\r\n           // this.recipesService.setRecipes(recipes);\r\n        }\r\n    ));\r\n}\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AlertComponent } from \"./alert/alert.component\";\r\nimport { DropdownDirective } from \"./dropdown-directive\";\r\nimport { LoadingSpinnerComponent } from \"./loading-spinner/loading-spinner.component\";\r\nimport { PlaceholderDirective } from \"./placeholder/placeholder.directive\";\r\n\r\n@NgModule({\r\n    declarations:[\r\n     AlertComponent,\r\n    LoadingSpinnerComponent,\r\n    PlaceholderDirective,\r\n    DropdownDirective\r\n    ],\r\n    imports:[\r\n        CommonModule\r\n    ],\r\n    exports:[\r\n        AlertComponent,\r\n        LoadingSpinnerComponent,\r\n        PlaceholderDirective,\r\n        DropdownDirective,\r\n        CommonModule\r\n    ],\r\n   \r\n     //if angular is lower than 9 then need to add this to make dynamic component work\r\n//   entryComponents:[\r\n//     AlertComponent\r\n//   ]\r\n})\r\n\r\nexport class SharedModule{}","import * as fromShoppingList from '../shopping-list/store/shopping-list.reducer';\r\nimport * as fromAuth from '../auth/store/auth.reducer';\r\nimport * as fromRecipe from '../recipes/store/recipe.reducer';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\n\r\nexport interface AppState{\r\n    shoppingList: fromShoppingList.State;\r\n    auth: fromAuth.State;\r\n    recipes: fromRecipe.State;\r\n}\r\n\r\n\r\nexport const appReducer: ActionReducerMap<AppState> = \r\n{\r\n\r\n    shoppingList: fromShoppingList.shoppingListReducer,\r\n    auth: fromAuth.authReducer,\r\n    recipes: fromRecipe.RecipeReducer\r\n};","import { HttpClient } from '@angular/common/http';\r\nimport {Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\nimport * as AuthActions from './auth.actions';\r\nimport {environment} from '../../../environments/environment';\r\nimport { of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../user.model';\r\nimport { AuthService } from '../auth.service';\r\n\r\nexport interface AuthResponseData{\r\n    kind: string;\r\n    idToken : string;\t\r\n    email :\tstring;\r\n    refreshToken :string;\r\n    expiresIn :\tstring;\r\n    localId :\tstring;\r\n    registered? : boolean;\r\n}\r\n\r\nconst handleAthentication = (expiresIn:number, email: string, userId: string, token: string) =>{\r\n    const expirationDate = new Date(new Date().getTime() + +expiresIn * 1000);\r\n    const user = new User(email, userId, token, expirationDate);\r\n   localStorage.setItem(\"userData\", JSON.stringify(user));\r\n    return new AuthActions.AuthenticateSuccess(\r\n        {email: email, \r\n        userId:userId, \r\n        token: token, \r\n        expirationDate: expirationDate,\r\n        redirect: true});\r\n}\r\nconst handleError = (errorRes: any) =>{\r\n    let errorMessage = \"An error occurred!\";\r\n    if(!errorRes.error || !errorRes.error.error){\r\n        return of(new AuthActions.AuthenticateFail(errorMessage));\r\n    }\r\n   switch(errorRes.error.error.message){\r\n      \r\n           case 'EMAIL_EXISTS':\r\n           errorMessage = 'This email exists already';\r\n           case 'INVALID_PASSWORD':\r\n            errorMessage = 'Invalid password';\r\n            case 'EMAIL_NOT_FOUND':\r\n           errorMessage = 'This email does not exist';\r\n   }\r\n  return  of(new AuthActions.AuthenticateFail(errorMessage));\r\n}\r\n\r\n@Injectable()\r\n\r\nexport class AuthEffects {\r\n\r\n    authSignup: any = createEffect((): any => {\r\n         return this.actions$\r\n        .pipe(\r\n            ofType(AuthActions.SIGNUP_START),\r\n            switchMap((signupAction : AuthActions.SignupStart)=>{\r\n\r\n                return  this.http\r\n                .post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key='+ environment.firebaseAPIKey,\r\n                 {\r\n                    email:signupAction.payload.email, \r\n                    password: signupAction.payload.password, \r\n                    returnSecureToken: true}\r\n                   ) .pipe(\r\n                    tap(resData =>{\r\n                        this.authService.setLogoutTimer(+resData.expiresIn*1000);\r\n                    }),\r\n                    map(\r\n                   resData => {\r\n                  return  handleAthentication(+resData.expiresIn, resData.email, resData.localId, resData.idToken);\r\n               }),\r\n               catchError(\r\n                  errorRes=> {\r\n                    return  handleError(errorRes);\r\n                  })\r\n                  );\r\n            })\r\n        )\r\n    });\r\n\r\n    authLogin: any = createEffect((): any => { return this.actions$\r\n    .pipe(\r\n    ofType(AuthActions.LOGIN_START),\r\n    switchMap((authData : AuthActions.LoginStart) => \r\n    {\r\n        return this.http.post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key='+ environment.firebaseAPIKey,\r\n        {\r\n         email:authData.payload.email, \r\n         password: authData.payload.password, \r\n         returnSecureToken: true})\r\n         .pipe(\r\n             tap(resData =>{\r\n                 this.authService.setLogoutTimer(+resData.expiresIn*1000);\r\n             }),\r\n            map(\r\n                resData => {\r\n               return  handleAthentication(+resData.expiresIn, resData.email, resData.localId, resData.idToken);\r\n            }),\r\n            catchError(\r\n               errorRes=> {\r\n                 return  handleError(errorRes);\r\n               })\r\n            );\r\n    }),\r\n    );\r\n});\r\n\r\nauthRedirect: any = createEffect((): any => { return this.actions$.pipe(\r\n    ofType(AuthActions.AUTHENTICATE_SUCCESS),\r\n    tap((authSuccessAction: AuthActions.AuthenticateSuccess) => {\r\n        console.log(\"authSuccessAction.payload.redirect \" + authSuccessAction.payload.redirect);\r\n        if(authSuccessAction.payload.redirect){\r\n        this.router.navigate(['/']);\r\n        }\r\n       })\r\n    )\r\n},   { dispatch: false });\r\n\r\n\r\nauthLogout: any = createEffect((): any => { return this.actions$.pipe(\r\n    ofType(AuthActions.LOGOUT),\r\n    tap(() => {\r\n        this.authService.clearLogoutTimer();\r\n        localStorage.removeItem(\"userData\");\r\n        this.router.navigate(['/auth']);\r\n       })\r\n    )\r\n},   { dispatch: false });\r\n\r\n\r\nautoLogin: any = createEffect((): any=>{\r\n    return this.actions$.pipe(\r\n     ofType(AuthActions.AUTO_LOGIN),\r\n     map(() =>{\r\n        var userData:{\r\n            email: string,\r\n            id: string,\r\n            _token: string,\r\n            _tokenExpirationDate: string\r\n        } = JSON.parse(localStorage.getItem(\"userData\"));\r\n        if(!userData){\r\n            return {type: 'DUMMY'}\r\n        }\r\n        else{\r\n         const loadedUser = new User(userData.email, userData.id, userData._token, \r\n            new Date(userData._tokenExpirationDate));\r\n            if(loadedUser.token){\r\n                   const expirationDuration = new Date(\r\n                    userData._tokenExpirationDate\r\n                ).getTime()  - new Date().getTime();\r\n                this.authService.setLogoutTimer(expirationDuration);\r\n                  return new AuthActions.AuthenticateSuccess({\r\n                   email: loadedUser.email, \r\n                   userId:loadedUser.id, \r\n                   token: loadedUser.token,\r\n                   expirationDate: new Date(userData._tokenExpirationDate),\r\n                   redirect: true\r\n                }\r\n                   );\r\n               \r\n                // this.user.next(loadedUser);\r\n                // const expirationDuration = new Date(\r\n                //     userData._tokenExpirationDate\r\n                // ).getTime()  - new Date().getTime();\r\n                // this.autoLogout(expirationDuration);\r\n            }\r\n            return {type: 'DUMMY'}\r\n        }\r\n     })\r\n\r\n    )\r\n})\r\nconstructor(private actions$: Actions, private http: HttpClient, private router: Router,\r\n    private authService : AuthService){}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AuthService } from './Auth/auth.service';\r\nimport * as fromApp from './store/app.reducer';\r\nimport * as AuthActions from './auth/store/auth.actions';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private authService: AuthService,\r\n    private store : Store<fromApp.AppState>){}\r\n ngOnInit(){\r\n   this.store.dispatch(new AuthActions.Autologin());\r\n   //this.authService.autoLogin();\r\n }\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <router-outlet></router-outlet>\r\n      </div>\r\n  </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { map, switchMap, tap, withLatestFrom } from \"rxjs/operators\";\r\nimport { Recipe } from \"../recipe.model\";\r\nimport * as RecipesActions from './recipe.actions';\r\nimport * as fromApp from '../../store/app.reducer';\r\n\r\n@Injectable()\r\nexport class RecipeEffects{\r\n\r\n    fetchRecipes: any = createEffect((): any => { return this.actions$.pipe(\r\n        ofType(RecipesActions.FETCH_RECIPES),\r\n        switchMap(fetchActionData => {\r\n            return this.http.get<Recipe[]>(\r\n                \"https://ng-course-recipe-book-689f7-default-rtdb.firebaseio.com/recipes.json\")\r\n                .pipe(map(recipes => {\r\n                    return recipes.map(recipe =>\r\n                     {return {...recipe, ingredients \r\n                     : recipe.ingredients ? recipe.ingredients : []}\r\n                     })\r\n                 }),\r\n                 map(recipes => {\r\n                     return new RecipesActions.SetRecipes(recipes);\r\n                 }\r\n                 ));\r\n        })\r\n        )\r\n    });\r\n\r\n    storeRecipes: any = createEffect((): any => { \r\n        return this.actions$.pipe(\r\n        ofType(RecipesActions.STORE_RECIPE),\r\n        withLatestFrom(this.store.select('recipes')),\r\n        switchMap(([actionData, recipesState]) => {\r\n            return this.http.put(\"https://ng-course-recipe-book-689f7-default-rtdb.firebaseio.com/recipes.json\"\r\n            ,recipesState.recipes)\r\n        })\r\n        )\r\n    }, { dispatch: false });\r\n\r\n    constructor(private actions$:Actions,\r\n         private http : HttpClient,\r\n         private store: Store<fromApp.AppState>){}\r\n}","import { Actions } from \"@ngrx/effects\";\r\nimport { Action } from \"@ngrx/store\";\r\n\r\nexport const AUTHENTICATE_SUCCESS = '[Auth] Authenticate Success';\r\nexport const LOGOUT = '[Auth] Logout';\r\nexport const LOGIN_START = '[Auth] Login Start';\r\nexport const AUTHENTICATE_FAIL ='[Auth] Authenticate Fail';\r\nexport const SIGNUP_START = '[Auth] Signup Start';\r\nexport const SIGNUP = '[Auth] Signup';\r\nexport const CLEAR_ERROR = '[Auth] Clear error';\r\nexport const AUTO_LOGIN = '[Auth] Auto Login';\r\nexport class AuthenticateSuccess implements Action{\r\n    readonly type = AUTHENTICATE_SUCCESS;\r\n\r\n    constructor(\r\n        public payload: {\r\n            email: string; \r\n            userId: string; \r\n            token: string; \r\n            expirationDate: Date,\r\n            redirect: boolean}){}\r\n}\r\n\r\nexport class logout implements Action{\r\n    readonly type = LOGOUT;\r\n}\r\n\r\nexport class LoginStart implements Action{\r\n    readonly type = LOGIN_START;\r\n    constructor(public payload: {email: string, password: string}){};\r\n}\r\n\r\nexport class AuthenticateFail implements Action{\r\n    readonly type = AUTHENTICATE_FAIL;\r\n    constructor(public payload : string){}\r\n}\r\n\r\nexport class SignupStart implements Action{\r\n    readonly type = SIGNUP_START;\r\n    constructor(public payload: {email: string, password: string}){};\r\n}\r\n\r\nexport class ClearError implements Action{\r\n    readonly type = CLEAR_ERROR;\r\n}\r\n\r\nexport class Autologin implements Action{\r\n    readonly type = AUTO_LOGIN;\r\n}\r\nexport type AuthActions = AuthenticateSuccess | logout | LoginStart | AuthenticateFail | SignupStart | ClearError | Autologin;","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-alert',\r\n    templateUrl: './alert.component.html',\r\n    styleUrls:['./alert.component.css']\r\n})\r\nexport class AlertComponent{\r\n    @Input() message : string;\r\n\r\n    @Output() close = new EventEmitter<void>();\r\n\r\n    onClose(){\r\n        this.close.emit();\r\n    }\r\n}","<div class=\"backdrop\" (click)=\"onClose()\">\r\n    \r\n</div>\r\n<div class=\"alert-box\">\r\n    <p>{{message}}</p>\r\n    <div class=\"alert-box-actions\">\r\n        <button class=\"btn btn-primary\" (click)=\"onClose()\">close</button>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppComponent } from './app.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport { AppRouteModule } from './app-routing.modules';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core.module';\r\nimport{StoreModule} from '@ngrx/store';\r\nimport * as fromApp from './store/app.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { AuthEffects } from './Auth/store/auth.effects';\r\nimport { RecipeEffects } from './recipes/store/recipe.effects';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    HttpClientModule,\r\n    AppRouteModule,\r\n    CoreModule,\r\n    StoreModule.forRoot(fromApp.appReducer),\r\n    EffectsModule.forRoot([AuthEffects,RecipeEffects])\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n \r\n})\r\nexport class AppModule { }\r\n","import { Action } from \"@ngrx/store\";\r\nimport { Ingredient } from \"../../shared/ingredient.model\";\r\nimport * as ShoppingListActions from \"./shopping-list.action\";\r\n\r\n\r\n\r\nexport interface State {\r\n  ingredients: Ingredient[];\r\n  editedIngredient: Ingredient;\r\n  editedIngredientIndex: number;\r\n}\r\n\r\n\r\nconst initialState: State = {\r\n    ingredients :  [\r\n        new Ingredient('Apple', 5),\r\n        new Ingredient('Tomotos', 5)\r\n        ],\r\n        editedIngredient: null,\r\n        editedIngredientIndex: -1\r\n};\r\n\r\nexport function shoppingListReducer(\r\n   state: State = initialState ,\r\n   action: ShoppingListActions.ShoppingListActions){\r\nswitch(action.type){\r\n    case ShoppingListActions.ADD_INGREDIENT:\r\n        return {\r\n          ...state,  //copy the old state (alway copy old state then do changes)\r\n          ingredients: [...state.ingredients, action.payload]\r\n        };\r\n        case ShoppingListActions.ADD_INGREDIENTS:\r\n          return {\r\n            ...state,  //copy the old state (alway copy old state then do changes)\r\n            ingredients: [...state.ingredients, ...action.payload]\r\n          };\r\n          case ShoppingListActions.UPDATE_INGREDIENT:\r\n           //ALWAYS COPY IMMUTABLE DATA\r\n          //connot overrite old state data\r\n          const ingredient = state.ingredients[state.editedIngredientIndex];\r\n          \r\n          //copy it then overwrite old data\r\n          const updatedIngredient = {\r\n             ...ingredient,\r\n              ...action.payload\r\n           };\r\n          const updatedIngredients = \r\n          [...state.ingredients];\r\n\r\n          updatedIngredients[state.editedIngredientIndex] = \r\n          updatedIngredient;\r\n          return{...state,\r\n               ingredients: updatedIngredients,\r\n               editedIngredientIndex: -1,\r\n               editedIngredient: null};\r\n\r\n          case ShoppingListActions.DELETE_INGREDIENT:\r\n            return {...state, \r\n              ingredients: state.ingredients.filter((ig, igIndex) =>{\r\n              return igIndex != state.editedIngredientIndex;\r\n            }),\r\n            editedIngredientIndex: -1,\r\n            editedIngredient: null};\r\n\r\n            case ShoppingListActions.START_EDIT:\r\n              return{\r\n                ...state,\r\n                editedIngredientIndex : action.payload,\r\n                editedIngredient: {...state.ingredients[action.payload]}\r\n              }\r\n              case ShoppingListActions.STOP_EDIT:\r\n                return{\r\n               ...state,\r\n             editedIngredientIndex: -1,\r\n               editedIngredient : null\r\n                }\r\n        default:\r\n          return state;\r\n}\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { PreloadAllModules, RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst appRoutes: Routes =[\r\n{path: \"\",  redirectTo: \"/recipes\", pathMatch: \"full\"},\r\n{path:\"recipes\", loadChildren: () => import('./recipes/recipes.module').then(m => m.RecipeModule)},\r\n{path:\"shopping-list\", loadChildren: () => import('./shopping-list/shopping-list.module').then(m => m.ShoppingListModule)},\r\n{path:\"auth\", loadChildren: () => import('./Auth/auth.module').then(m => m.AuthModule)}\r\n];\r\n\r\n@NgModule(\r\n    {\r\n     imports: [RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules, initialNavigation: 'enabled' })],\r\n     exports: [RouterModule]\r\n    }\r\n)\r\n\r\nexport class AppRouteModule{\r\n\r\n}","import {  Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Ingredient } from \"../shared/ingredient.model\";\r\nimport { ShoppingListService } from \"../shopping-list/shopping-list.service\";\r\nimport { Recipe } from \"./recipe.model\";\r\nimport * as ShopingListAction from '../shopping-list/store/shopping-list.action';\r\nimport * as fromApp from '../store/app.reducer';\r\n\r\n@Injectable()\r\nexport class RecipeService{\r\n  recipeChanged = new Subject<Recipe[]>();\r\nconstructor(private slService : ShoppingListService,\r\n  private store: Store<fromApp.AppState>)\r\n{}\r\nprivate recipes: Recipe[] =[];\r\n  //  private recipes: Recipe[] =[\r\n  //       new Recipe(\r\n  //         1,\r\n  //         \"Green Salad\",\r\n  //         \"Easy healthy recipe\",\r\n  //       \"https://hips.hearstapps.com/del.h-cdn.co/assets/16/21/1600x1066/gallery-1464124561-shot-1-033.jpg?resize=980:*\",\r\n  //       [new Ingredient('Meat',1),\r\n  //       new Ingredient('French Fries',20)]),\r\n  //       new Recipe(\r\n  //         2,\r\n  //         \"Vegetarian Mapo Tofu\",\r\n  //         \"Easy healthy recipe\",\r\n  //       \"https://media.self.com/photos/60634a7b6fb177c75e545c84/4:3/w_384/Vegetarian-Mapo-Tofu.jpg\",\r\n  //       [new Ingredient('Meat',1),\r\n  //       new Ingredient('Buns',2)]),\r\n  //   ];\r\n\r\nsetRecipes(recipes: Recipe[]){\r\n  this.recipes = recipes;\r\n  this.recipeChanged.next(this.recipes.slice());\r\n}\r\n\r\n      getRecipes(){\r\n          return this.recipes.slice();//will return copy of original array\r\n      }\r\n\r\n      addIngredientToShoppingList(ingredients: Ingredient[]){\r\n        //redux\r\n        this.store.dispatch(new ShopingListAction.AddIngredients(ingredients));\r\n\r\n        //For service\r\n        //this.slService.addIngredients(ingredients);\r\n      }\r\n\r\n      getRecipe(index: number){\r\n        return this.recipes[index];\r\n      }\r\n\r\n      addRecipe(recipe: Recipe){\r\n        this.recipes.push(recipe);\r\n        this.recipeChanged.next(this.recipes.slice());\r\n      }\r\n\r\n      updateRecipe(index : number,\r\n         newRecipe : Recipe){\r\n           this.recipes[index] = newRecipe;\r\n           this.recipeChanged.next(this.recipes.slice());\r\n         }\r\n\r\n         deleteRecipe(index: number){\r\n           this.recipes.splice(index, 1);\r\n           this.recipeChanged.next(this.recipes.slice());\r\n         }\r\n}","export class User{\r\nconstructor(\r\n    public email:string, \r\n    public id: string, \r\n    private _token: string,\r\n    private _tokenExpirationDate: Date){}\r\n\r\n    get token(){\r\n        if(!this._tokenExpirationDate || new Date() > this._tokenExpirationDate){\r\n        return null;\r\n        }\r\n        return this._token;\r\n    }\r\n\r\n}","import { Recipe } from \"../recipe.model\";\r\nimport * as RecipeActions from './recipe.actions'\r\nexport interface State{\r\n    recipes: Recipe[]\r\n}\r\n\r\nconst initialState : State = {\r\n    recipes: []\r\n};\r\n\r\nexport function RecipeReducer(state = initialState, \r\n    action : RecipeActions.RecipesActions){\r\n\r\n    switch(action.type){\r\n\r\n    case RecipeActions.SET_RECIPES:\r\n    return{\r\n    ...state,  //spread operator\r\n    recipes: [...action.payload]\r\n    }\r\n\r\ncase RecipeActions.ADD_RECIPE:\r\n    return{\r\n        ...state,\r\n        recipes: [...state.recipes, action.payload]\r\n    }\r\ncase RecipeActions.UPDATE_RECIPE:\r\n    const updatedRecipe = \r\n    {...state.recipes[action.payload.index],\r\n    ...action.payload.newRecipe};\r\n    const updatedRecipes = [...state.recipes];\r\n    updatedRecipes[action.payload.index] = updatedRecipe;\r\n\r\n    return{\r\n        ...state,\r\n        recipes:updatedRecipes\r\n\r\n    }\r\n\r\n    case RecipeActions.DELETE_RECIPE:\r\n        return{\r\n            ...state,\r\n            recipes: state.recipes.filter((recipe, index)=>{\r\n                return index !== action.payload;\r\n            })\r\n        }\r\n\r\n    default:\r\n        return state;\r\n\r\n    }\r\n}","export class User{\r\nconstructor(\r\n    public email:string, \r\n    public id: string, \r\n    private _token: string,\r\n    private _tokenExpirationDate: Date){}\r\n\r\n    get token(){\r\n        if(!this._tokenExpirationDate || new Date() > this._tokenExpirationDate){\r\n        return null;\r\n        }\r\n        return this._token;\r\n    }\r\n\r\n}","import { Action } from \"@ngrx/store\";\r\nimport { Ingredient } from \"src/app/shared/ingredient.model\";\r\n\r\nexport const ADD_INGREDIENT = '[Shopping List] Add Ingredient';\r\nexport const ADD_INGREDIENTS = '[Shopping List] Add Ingredients';\r\nexport const UPDATE_INGREDIENT = '[Shopping List] Update Ingredient';\r\nexport const DELETE_INGREDIENT = '[Shopping List] Delete Ingredient';\r\nexport const START_EDIT= '[Shopping List] Start Edit';\r\nexport const STOP_EDIT = '[Shopping List] Stop Edit';\r\n\r\nexport class AddIngredient implements Action{\r\n   readonly type = ADD_INGREDIENT;\r\n   constructor(public payload: Ingredient){}\r\n}\r\n\r\nexport class AddIngredients implements Action{\r\n    readonly type = ADD_INGREDIENTS;\r\n    constructor(public payload: Ingredient[]){}\r\n}\r\n\r\nexport class UpdateIngredient implements Action{\r\n    readonly type = UPDATE_INGREDIENT;\r\n    constructor(public payload: Ingredient){}\r\n}\r\n\r\nexport class DeleteIngredient implements Action{\r\n    readonly type = DELETE_INGREDIENT;\r\n}\r\n\r\nexport class StartEdit implements Action{\r\n    readonly type = START_EDIT;\r\n    constructor(public payload: number){}\r\n}\r\n\r\nexport class StopEdit implements Action{\r\n    readonly type = STOP_EDIT;\r\n}\r\n\r\nexport type ShoppingListActions =\r\n  AddIngredient \r\n| AddIngredients \r\n| UpdateIngredient \r\n| DeleteIngredient\r\n| StartEdit\r\n| StopEdit;\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { AuthService } from \"../Auth/auth.service\";\r\nimport { DataStorageService } from \"../shared/data-storage.service\";\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as AuthActions  from '../Auth/store/auth.actions';\r\nimport * as RecipesAction from '../recipes/store/recipe.actions';\r\n@Component({\r\nselector: \"app-header\",\r\ntemplateUrl: \"./header.component.html\"\r\n})\r\n\r\nexport class HeaderComponent implements OnInit, OnDestroy{\r\nconstructor(private dataStorageService: DataStorageService,\r\n    private authService : AuthService,\r\n    private store: Store<fromApp.AppState>){}\r\nprivate userSub : Subscription;\r\nisAuthenticted = false;\r\n\r\n    ngOnInit(){\r\n        this.userSub =  this.store.select('auth')\r\n        .pipe(map(authState => authState.user))\r\n        .subscribe(user =>{\r\n        this.isAuthenticted = !!user;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(){\r\n         this.userSub.unsubscribe();\r\n    }\r\n\r\n    onSaveData(){\r\n        this.store.dispatch(new RecipesAction.StoreRecipe());\r\n    // this.dataStorageService.storeRecipe();\r\n    }\r\n    onFetchData(){\r\n       this.store.dispatch(new RecipesAction.FetchRecipes());\r\n        // this.dataStorageService.fetchRecipes().subscribe();\r\n    }\r\n    onlogout(){\r\n        this.store.dispatch(new AuthActions.logout());\r\n       // this.authService.logout();\r\n    }\r\n}","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav\">\r\n               <li routerLinkActive =\"active\" *ngIf=\"isAuthenticted\">\r\n                   <a routerLink=\"/recipes\">Recipes</a>\r\n               </li>\r\n               <li routerLinkActive =\"active\"*ngIf=\"!isAuthenticted\">\r\n                <a  routerLink=\"/auth\">Authenticate</a>\r\n            </li>\r\n               <li routerLinkActive =\"active\">\r\n                <a  routerLink=\"/shopping-list\">Shopping List</a>\r\n            </li>\r\n            </ul>\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li *ngIf=\"isAuthenticted\">\r\n                    <a style=\"cursor: pointer;\" (click)=\"onlogout()\">Logout</a>\r\n                </li>\r\n                <li class=\"dropdown\" appDropdown *ngIf=\"isAuthenticted\">\r\n                    <a style=\"cursor: pointer;\" class=\"dropdown-toggle\" role=\"button\"> Manage <span class=\"caret\"></span></a>\r\n                    <ul class=\"dropdown-menu\">\r\n                       <li><a style=\"cursor: pointer;\" (click)=\"onSaveData()\">Save Data</a></li> \r\n                       <li><a style=\"cursor: pointer;\"  (click)=\"onFetchData()\">Fetch Data</a></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Action } from \"@ngrx/store\"\r\nimport { Recipe } from \"../recipe.model\";\r\n\r\nexport const SET_RECIPES = '[Recipes] Set Recipe'\r\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes'\r\nexport const ADD_RECIPE = '[Recipe] Add Recipe'\r\nexport const UPDATE_RECIPE = '[Recipe] Update Recipe'\r\nexport const DELETE_RECIPE = '[Recipe] Delete Recipe'\r\nexport const STORE_RECIPE = '[Recipe] Store Recipe';\r\n\r\nexport class SetRecipes implements Action{\r\n    readonly type = SET_RECIPES;\r\n\r\n    constructor(public payload : Recipe[]){}\r\n}\r\n\r\nexport class FetchRecipes implements Action{\r\n    readonly type = FETCH_RECIPES;\r\n}\r\n\r\nexport class AddRecipe implements Action{\r\n    readonly type = ADD_RECIPE;\r\n    constructor(public payload: Recipe){}\r\n}\r\n\r\nexport class UpdateRecipe implements Action{\r\n    readonly type = UPDATE_RECIPE;\r\n    constructor(public payload: {index: number, newRecipe: Recipe}){}\r\n}\r\n\r\nexport class DeleteRecipe implements Action{\r\nreadonly type = DELETE_RECIPE;\r\nconstructor(public payload : number){}\r\n\r\n}\r\n\r\nexport class StoreRecipe implements Action{\r\n    readonly type = STORE_RECIPE;\r\n}\r\nexport type RecipesActions = SetRecipes \r\n| FetchRecipes \r\n| AddRecipe\r\n|UpdateRecipe\r\n|DeleteRecipe\r\n|StoreRecipe;","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AuthInterceptorService } from \"./Auth/auth-interceptor.service\";\r\nimport { RecipeService } from \"./recipes/recipe.service\";\r\nimport { DataStorageService } from \"./shared/data-storage.service\";\r\nimport { ShoppingListService } from \"./shopping-list/shopping-list.service\";\r\n\r\n@NgModule({\r\nproviders:[\r\n    ShoppingListService,\r\n     RecipeService,\r\n     DataStorageService,\r\n     {provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptorService, \r\n      multi: true}]\r\n})\r\n\r\nexport class CoreModule{\r\n\r\n}","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\nimport {BehaviorSubject, Subject, throwError} from 'rxjs';\r\nimport { User } from \"./user.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as AuthActions from  './store/auth.actions';\r\nexport interface AuthResponseData{\r\n    kind: string;\r\n    idToken : string;\t\r\n    email :\tstring;\r\n    refreshToken :string;\r\n    expiresIn :\tstring;\r\n    localId :\tstring;\r\n    registered? : boolean;\r\n}\r\n\r\n\r\n@Injectable({'providedIn': 'root'})\r\nexport class AuthService{\r\n\r\n    constructor(private http: HttpClient, \r\n        private router: Router, \r\n        private store : Store<fromApp.AppState>){}\r\n\r\n     //user = new BehaviorSubject<User>(null);\r\nprivate tokenExpirationTimer: any;\r\n    signup(email: string, password: string){\r\n      return  this.http\r\n      .post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key='+ environment.firebaseAPIKey,\r\n       {\r\n          email:email, \r\n          password: password, \r\n          returnSecureToken: true}\r\n         )\r\n         .pipe(catchError(this.handleError), tap(resData =>{\r\n             this.handleAuthentication(resData.email, \r\n                resData.localId, resData.idToken, \r\n                +resData.expiresIn);\r\n            })) \r\n    }\r\n\r\n    login(email: string, password: string){\r\n     return this.http.post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key='+ environment.firebaseAPIKey,\r\n   {\r\n    email:email, \r\n    password: password, \r\n    returnSecureToken: true}).pipe(\r\n        catchError(this.handleError), tap(resData =>{\r\n            this.handleAuthentication(resData.email, \r\n               resData.localId, resData.idToken, \r\n               +resData.expiresIn);\r\n           }))\r\n    }\r\n\r\n    private handleError(errorRes : HttpErrorResponse){\r\n        let errorMessage = \"An error occurred!\";\r\n        if(!errorRes.error || !errorRes.error.error){\r\n            return throwError(errorMessage);\r\n        }\r\n       switch(errorRes.error.error.message){\r\n          \r\n               case 'EMAIL_EXISTS':\r\n               errorMessage = 'This email exists already';\r\n               case 'INVALID_PASSWORD':\r\n                errorMessage = 'Invalid password';\r\n                case 'EMAIL_NOT_FOUND':\r\n               errorMessage = 'This email does not exist';\r\n       }\r\n       return throwError(errorMessage);\r\n    }\r\n\r\n    logout(){\r\n        //this.user.next(null);\r\n        this.store.dispatch(new AuthActions.logout());\r\n\r\n        localStorage.removeItem(\"userData\");\r\n        if(this.tokenExpirationTimer){\r\n            clearTimeout(this.tokenExpirationTimer);\r\n        }\r\n        this.tokenExpirationTimer = null;\r\n      //s  this.router.navigate([\"/auth\"]);\r\n    }\r\n\r\n    autoLogout(expirationDuration : number){\r\n        this.tokenExpirationTimer =  setTimeout(() => {\r\n       this.logout(); \r\n     }, expirationDuration);\r\n    }\r\n\r\n    \r\n    setLogoutTimer(expirationDuration : number){\r\n        this.tokenExpirationTimer =  setTimeout(() => {\r\n       this.store.dispatch(new AuthActions.logout()); \r\n     }, expirationDuration);\r\n    }\r\n\r\nclearLogoutTimer(){\r\n    if(this.tokenExpirationTimer){\r\n        clearTimeout(this.tokenExpirationTimer);\r\n        this.tokenExpirationTimer = null;\r\n    }\r\n}\r\n\r\n    autoLogin(){\r\n    var userData:{\r\n        email: string,\r\n        id: string,\r\n        _token: string,\r\n        _tokenExpirationDate: string\r\n    } = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if(!userData){\r\n        return;\r\n    }\r\n    else{\r\n     const loadedUser = new User(userData.email, userData.id, userData._token, \r\n        new Date(userData._tokenExpirationDate));\r\n        if(loadedUser.token){\r\n              this.store.dispatch(new AuthActions.AuthenticateSuccess({\r\n               email: loadedUser.email, \r\n               userId:loadedUser.id, \r\n               token: loadedUser.token,\r\n               expirationDate: new Date(userData._tokenExpirationDate),\r\n               redirect: false},\r\n               ));\r\n           \r\n            // this.user.next(loadedUser);\r\n            const expirationDuration = new Date(\r\n                userData._tokenExpirationDate\r\n            ).getTime()  - new Date().getTime();\r\n            this.autoLogout(expirationDuration);\r\n        }\r\n    }\r\n}\r\n\r\n    private handleAuthentication(\r\n        email:string, \r\n        userId: string, \r\n        token: string, \r\n        expiresIn: number\r\n    )\r\n    {\r\n        const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n        const user = new User(email, userId, token, expirationDate);\r\n        //this.user.next(user);\r\n        this.store.dispatch(new AuthActions.AuthenticateSuccess({\r\n            email: email, \r\n            userId: userId, \r\n            token: token,\r\n            expirationDate: expirationDate,\r\n           redirect: true}\r\n            ));\r\n        this.autoLogout(expiresIn*1000);\r\n        localStorage.setItem('userData', JSON.stringify(user));\r\n    }\r\n}","import { Ingredient } from \"../shared/ingredient.model\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n\r\nexport class ShoppingListService{\r\n\r\n    ingredientsChanged = new Subject<Ingredient[]>();\r\n    startedEditing = new Subject<number>();\r\n   private ingredients : Ingredient[] = [\r\n        new Ingredient('Apple', 5),\r\n        new Ingredient('Tomotos', 5)\r\n        ];\r\n\r\n        getIngredients()\r\n        {\r\n            return this.ingredients.slice();\r\n        }\r\n\r\n        addIngredient(ingredient: Ingredient){\r\n            this.ingredients.push(ingredient);\r\n            this.ingredientsChanged.next(this.ingredients.slice());\r\n        }\r\n\r\n        addIngredients(ingredients: Ingredient[]){\r\n            this.ingredients.push(...ingredients);\r\n            this.ingredientsChanged.next(this.ingredients.slice());\r\n        }\r\n\r\n        getIngredient(index: number){\r\n            return this.ingredients[index];\r\n        }\r\n\r\n        updateIngredient(index: number, newIngredient:Ingredient){\r\n        this.ingredients[index] = newIngredient;\r\n        this.ingredientsChanged.next(this.ingredients.slice());\r\n\r\n        }\r\n        deleteIngredient(index: number){\r\n            this.ingredients.splice(index, 1);\r\n            this.ingredientsChanged.next(this.ingredients.slice());\r\n        }\r\n    }","import { User } from \"../user.model\";\r\nimport * as AuthActions from \"./auth.actions\";\r\n\r\nexport interface State{\r\n    user: User;\r\n    authError: string;\r\n    loading:boolean\r\n}\r\n\r\nconst initialState: State = {\r\nuser : null,\r\nauthError: null,\r\nloading :false\r\n};\r\n\r\nexport function authReducer(state = initialState,\r\n     action : AuthActions.AuthActions)\r\n     {\r\n\r\n        switch(action.type){\r\n            case AuthActions.AUTHENTICATE_SUCCESS:\r\n            const user = new User(action.payload.email, action.payload.userId, action.payload.token, action.payload.expirationDate);\r\n              return{\r\n                 ...state,\r\n                 authError: null,\r\n                  user: user\r\n             }\r\n            case AuthActions.LOGOUT:\r\n                return{\r\n                    ...state,\r\n                    authError: null,\r\n                    user: null,\r\n                    loading:false\r\n                }\r\n                case AuthActions.LOGIN_START:\r\n                 case AuthActions.SIGNUP_START:\r\n                    return {\r\n                        ...state,\r\n                        authError:null,\r\n                        loading:true\r\n                    }\r\n                   \r\n                    case AuthActions.AUTHENTICATE_FAIL:\r\n                    return {\r\n                        ...state,\r\n                        user: null,\r\n                        authError: action.payload,\r\n                        loading:false\r\n                    }\r\n                    case AuthActions.CLEAR_ERROR:\r\n                        return {\r\n                            ...state,\r\n                            authError:null,\r\n                        }\r\n                        case AuthActions.AUTO_LOGIN:\r\n                        return {\r\n                            ...state,\r\n                            authError:null,\r\n                            user: state.user\r\n                        }\r\n\r\n           default:\r\n           return state;\r\n}\r\n}","//import { Injectable } from \"@angular/core\";\r\n// import { HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from \"@angular/common/http\";\r\n// import { AuthService } from \"./auth.service\";\r\n// import { exhaustMap, take } from \"rxjs/operators\";\r\n\r\n// @Injectable()\r\n\r\n// export class AuthInterceptorService implements HttpInterceptor{\r\n\r\n//     constructor(private authService: AuthService){}\r\n// intercept(req: HttpRequest<any>, next: HttpHandler){\r\n// return this.authService.user.pipe(take(1), exhaustMap(user => {\r\n//     if(!user){\r\n//         return next.handle(req);\r\n//     }\r\n//    const modifiedRequest = req.clone({params: new HttpParams().set('auth', user.token)});\r\n//     return next.handle(modifiedRequest);\r\n// }));\r\n// }\r\n// }\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { exhaustMap, map, take } from \"rxjs/operators\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport * as fromApp from '../store/app.reducer';\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor{\r\n\r\n     constructor(private authService: AuthService,\r\n     private store : Store<fromApp.AppState>){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler){\r\n     return this.store.select('auth').pipe(take(1),\r\n     map  (authState=> {\r\n    return authState.user;\r\n     }),\r\n     exhaustMap(user => {\r\n    if(!user){\r\n        return next.handle(req);\r\n    }\r\n   const modifiedRequest = req.clone({params: new HttpParams().set('auth', user.token)});\r\n    return next.handle(modifiedRequest);\r\n}));\r\n}\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\n     platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\n   });\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component } from \"@angular/core\";\r\n@Component(\r\n    {\r\n        selector: 'app-loading-spinner',\r\n        template:'<div class=\"loader\">Loading...</div>',\r\n        styleUrls:['./loading-spinner.component.css']\r\n    \r\n    }\r\n)\r\n\r\nexport class LoadingSpinnerComponent{\r\n\r\n}"],"sourceRoot":"webpack:///"}