{"version":3,"sources":["./src/app/shopping-list/shopping-list.module.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.ts","./src/app/shopping-list/shopping-edit/shopping-edit.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html"],"names":[],"mappings":"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","file":"shopping-list-shopping-list-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\nimport { ShoppingEditComponent } from \"./shopping-edit/shopping-edit.component\";\r\nimport { ShoppingListComponent } from \"./shopping-list.component\";\r\n\r\n@NgModule({\r\ndeclarations:[\r\n    ShoppingListComponent,\r\n    ShoppingEditComponent,\r\n],\r\nimports:[\r\n    SharedModule,\r\n    FormsModule,\r\n    RouterModule.forChild([\r\n        {path: '', component: ShoppingListComponent},\r\n    ]),\r\n]\r\n})\r\n\r\nexport class ShoppingListModule{}","import { state } from '@angular/animations';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { Ingredient } from '../../shared/ingredient.model';\r\nimport { ShoppingListService } from '../shopping-list.service';\r\nimport * as ShoppingListAction from '../store/shopping-list.action';\r\nimport * as fromApp from '../../store/app.reducer';\r\n@Component({\r\n  selector: 'app-shopping-edit',\r\n  templateUrl: './shopping-edit.component.html',\r\n  styleUrls: ['./shopping-edit.component.css']\r\n})\r\nexport class ShoppingEditComponent implements OnInit , OnDestroy{\r\n@ViewChild('f') slForm : NgForm;\r\n  subscription: Subscription;\r\neditMode= false;\r\n// editedItemIdex: number;\r\neditedItem: Ingredient;\r\nconstructor(private slService: ShoppingListService,\r\n  private store : Store<fromApp.AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n    //For redux NGRX\r\n this.subscription = this.store.select('shoppingList').subscribe(stateData =>{\r\n  if(stateData.editedIngredientIndex > -1){\r\nthis.editMode = true;\r\nthis.editedItem = stateData.editedIngredient;\r\n//this.editedItemIdex = stateData.editedIngredientIndex;\r\nthis.slForm.setValue({\r\n  name: this.editedItem.name,\r\n  amount: this.editedItem.amount\r\n});\r\n  }else{\r\n    this.editMode = false;\r\n  }\r\n});\r\n\r\n//Fr service\r\n    // this.subscription = this.slService.startedEditing\r\n    // .subscribe(\r\n    //   (index: number) =>{\r\n    //    this.editMode = true; \r\n    //    this.editedItemIdex = index;\r\n    //    this.editedItem = this.slService.getIngredient(index)\r\n    //   this.slForm.setValue({\r\n    //     name: this.editedItem.name,\r\n    //     amount: this.editedItem.amount\r\n    //   });\r\n    //   }\r\n    // );\r\n  }\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n    this.store.dispatch(new ShoppingListAction.StopEdit());\r\n  }\r\n\r\n  onSubmit(form: NgForm){\r\n    const value = form.value;\r\n    const newIngredient =\r\n     new Ingredient(value.name, value.amount);\r\n     if(this.editMode){\r\n     //for redux\r\n      this.store.dispatch(new ShoppingListAction.UpdateIngredient(newIngredient));\r\n       //for service\r\n      // this.slService.updateIngredient(this.editedItemIdex, newIngredient);\r\n     }\r\n     else{\r\n       //Redux implementation\r\n      this.store.dispatch(new \r\n        ShoppingListAction\r\n        .AddIngredient(newIngredient));\r\n\r\n      //For service\r\n      //this.slService.addIngredient(newIngredient);\r\n     }\r\n     this.editMode = false;\r\n     form.reset();\r\n  }\r\n  onClear(){\r\n    this.slForm.reset();\r\n    this.editMode = false;\r\n    //for redux\r\n    this.store.dispatch(new ShoppingListAction.StopEdit());\r\n  }\r\n\r\n  onDelete(){\r\n    //For redux\r\n    this.store.dispatch(new ShoppingListAction.DeleteIngredient());\r\n    //For service\r\n    //this.slService.deleteIngredient(this.editedItemIdex);\r\n    this.onClear();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n<div class=\"col-xs-12\">\r\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" >\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-5 form-group\">\r\n                <label for=\"name\" >Name</label>\r\n                <input \r\n                type=\"text\" \r\n                id =\"name\" \r\n                name =\"name\"\r\n                ngModel\r\n                required\r\n                class=\"form-control\">\r\n            </div>\r\n            <div class=\"col-sm-2 form-group\">\r\n                <label for=\"amount\">Amount</label>\r\n                <input type=\"number\" \r\n                id =\"amount\" \r\n                name=\"amount\"\r\n                ngModel\r\n                required\r\n                pattern=\"^[1-9]+[0-9]*$\"\r\n                class=\"form-control\">\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n         <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">{{editMode ? 'Update' : 'Add'}}</button>\r\n         <button class=\"btn btn-danger\" type=\"button\" *ngIf=\"editMode\" (click)=\"onDelete()\">Delete</button> \r\n         <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">Clear</button> \r\n        </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Ingredient } from '../shared/ingredient.model';\r\nimport { ShoppingListService } from './shopping-list.service';\r\nimport * as fromApp from '../store/app.reducer';\r\nimport * as ShoppingListActions from './store/shopping-list.action'\r\n@Component({\r\n  selector: 'app-shopping-list',\r\n  templateUrl: './shopping-list.component.html',\r\n  styleUrls: ['./shopping-list.component.css']\r\n})\r\nexport class ShoppingListComponent implements OnInit,OnDestroy {\r\n  //For redux\r\n  ingredients :Observable<{ingredients: Ingredient[]}>;\r\n\r\n//For service\r\n  //ingredients : Ingredient[];\r\n\r\n   private subscription:Subscription;\r\n\r\n  constructor(private slService: ShoppingListService,\r\n    private store: Store<fromApp.AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n//Redux implementation\r\n   this.ingredients = this.store.select('shoppingList');\r\n\r\n   //service implementation\r\n    // this.ingredients = this.slService.getIngredients();\r\n    // this.subscription = this.slService.ingredientsChanged\r\n    // .subscribe(\r\n    //  (ingredients: Ingredient[])=>{\r\n    //   this.ingredients = ingredients\r\n    //   }\r\n    // );\r\n  }\r\n  ngOnDestroy() :void{\r\n    //this.subscription.unsubscribe();\r\n\r\n  }\r\n  onEditItem(index: number){\r\nthis.store.dispatch(new ShoppingListActions.StartEdit(index))\r\n    //  this.slService.startedEditing.next(index);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-xs-10\">\r\n        <app-shopping-edit ></app-shopping-edit>\r\n        <hr/>\r\n       <ul class=\"list-group\">\r\n         <a class=\"list-group-item\"\r\n          style=\"cursor: pointer\"\r\n          *ngFor=\"let ingredient of \r\n          (ingredients | async).ingredients; let i = index\"\r\n          (click)=\"onEditItem(i)\"\r\n          >\r\n        {{ingredient.name}} ({{ingredient.amount}})\r\n        </a>\r\n       </ul>\r\n    </div>\r\n    </div>\r\n\r\n    <!--  For service just use: \"let ingredient of \r\n          ingredients; -->"],"sourceRoot":"webpack:///"}